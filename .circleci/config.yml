# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Install packages
          command: |
            echo 'apt-get update -qq && apt-get install -qq --no-install-recommends nodejs npm' | sudo bash
      - run:
          name: Build
          command: echo mvn -B -DskipFrontend -DskipTests clean test-compile -T 1C -q
      - run:
          name: List tests
          command: circleci tests glob "**/src/test/**/**.java"    

      # curl -fLSs https://raw.githubusercontent.com/CircleCI-Public/circleci-cli/master/install.sh | sudo bash

      # Then run your tests!
      # - run:
      #     name: Test
      #     command: mvn test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test


# version: 2.1
# orbs:
#   slack: circleci/slack@4.0.0

# jobs:
#   build:
#     working_directory: ~/circleci-demo-python-django
#     docker:
#       - image: circleci/python:3.6.4
#         environment:
#           PIPENV_VENV_IN_PROJECT: true
#           DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
#       - image: circleci/postgres:9.6.2
#         environment:
#           POSTGRES_USER: root
#           POSTGRES_DB: circle_test  
#     steps:
#       - checkout
#       - run: postgres -V